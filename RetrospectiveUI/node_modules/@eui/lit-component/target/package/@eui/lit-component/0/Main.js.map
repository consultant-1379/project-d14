{"version":3,"sources":["webpack://EUILitComponent/webpack/bootstrap","webpack://EUILitComponent/./node_modules/@eui/component/target/package/@eui/component/0/Main.js","webpack://EUILitComponent/./node_modules/lit-html/lib/directive.js","webpack://EUILitComponent/./node_modules/lit-html/lib/dom.js","webpack://EUILitComponent/./node_modules/lit-html/lib/part.js","webpack://EUILitComponent/./node_modules/lit-html/lib/template.js","webpack://EUILitComponent/./node_modules/lit-html/lib/template-instance.js","webpack://EUILitComponent/./node_modules/lit-html/lib/template-result.js","webpack://EUILitComponent/./node_modules/lit-html/lib/parts.js","webpack://EUILitComponent/./node_modules/lit-html/lib/default-template-processor.js","webpack://EUILitComponent/./node_modules/lit-html/lib/template-factory.js","webpack://EUILitComponent/./node_modules/lit-html/lib/render.js","webpack://EUILitComponent/./node_modules/lit-html/lit-html.js","webpack://EUILitComponent/./node_modules/lit-html/directives/unsafe-html.js","webpack://EUILitComponent/./node_modules/lit-html/directives/async-append.js","webpack://EUILitComponent/./node_modules/lit-html/directives/async-replace.js","webpack://EUILitComponent/./node_modules/lit-html/directives/cache.js","webpack://EUILitComponent/./node_modules/lit-html/directives/class-map.js","webpack://EUILitComponent/./node_modules/lit-html/directives/if-defined.js","webpack://EUILitComponent/./node_modules/lit-html/directives/guard.js","webpack://EUILitComponent/./node_modules/lit-html/directives/repeat.js","webpack://EUILitComponent/./node_modules/lit-html/directives/style-map.js","webpack://EUILitComponent/./node_modules/lit-html/directives/until.js","webpack://EUILitComponent/./src/directives/IfNull.js","webpack://EUILitComponent/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","default","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","configurable","writable","shadowRoot","querySelectorAll","forEach","classList","add","localName","document","querySelector","ShadyCSS","prepareTemplate","whenComponentsAreDefined","Array","slice","map","customElements","whenDefined","Promise","all","requestAnimationFrame","sym","String","split","replace","Math","random","toString","microtaskDebounce","createElement","MutationObserver","observe","childList","textContent","warn","console","addClassNames","bubble","CustomEvent","arguments","length","getOwnPropertyDescriptors","defineProperties","bubbles","composed","detail","dispatchEvent","dashToCamel","substr","toUpperCase","camelToDash","toLowerCase","compatUpdated","window","innerHTML","styleElement","_shadyPrepared","nativeShadow","eventHandlers","entries","addEventListener","removeEventListener","initializer","constructor","_propDefs","assign","a","from","includes","u","_mixins","indexOf","super","this","_lifecycleDebounced","_executeLifecycle","intercepts","executeComponentRender","JSON","parse","h","coerce","serialize","deserialize","Boolean","Number","isNaN","stringify","isArray","f","b","is","componentClass","define","_prevProps","_connected","_justConnected","_findProps","_setAttributes","didDisconnect","componentWillDisconnect","reduce","_observedAttributes","attribute","attributes","required","type","_syncPropertyToAttribute","some","shouldComponentRender","Map","startsWith","set","has","updateLocale","locale","home","_getWindow","json","i18n","attributeChangedCallback","_syncAttributeToProperty","_setDiff","props","didConnect","componentDidConnect","didChangeProps","componentDidReceiveProps","_shouldRenderLocale","shouldRender","willRender","componentWillRender","executeRender","didRender","componentDidRender","_syncingAttributeToProperty","_syncingPropertyToAttribute","removeAttribute","setAttribute","y","v","g","attachShadow","_template","content","cloneNode","appendChild","createTextNode","prepend","template","style","root","connectedCallback","_initialized","init","then","didUpgrade","componentDidUpgrade","currentScript","ownerDocument","_currentScript","getElementById","_","O","P","templatePosition","configKeysPath","$components","callback","j","reverse","_stateChanged","provider","store","getState","dispatch","disconnect","connect","listen","action","unlisten","state","D","C","x","HTMLElement","directives","WeakMap","args","isDirective","isCEPolyfill","undefined","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","parts","nodesToRemove","stack","walker","createTreeWalker","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","attributeValue","getAttribute","statics","tagName","currentNode","data","parent","parentNode","lastIndex","insert","createMarker","match","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","processor","options","__parts","setValue","commit","fragment","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","getHTML","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","iterator","AttributeCommitter","dirty","_createPart","text","_getValue","committer","directive","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","join","render","appendInto","svg","unsafeHTML","previousValue","__asyncValues","asyncIterator","TypeError","__values","verb","resolve","reject","done","settle","asyncAppend","mapper","async","e_1","_a","value_1_1","value_1","next","itemStartNode","e_1_1","error","return","asyncReplace","cache","cachedTemplate","nodes","createDocumentFragment","classMapCache","classMap","classInfo","className","oldInfo","remove","ifDefined","guard","every","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","list","partListCache","keyListCache","repeat","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","styleMapCache","styleMap","styleInfo","cssText","removeProperty","setProperty","_state","until","lastRenderedIndex","previousValues","previousLength","resolvedValue","ifNull","AttributePart","LitMixin","Base","customName","register","components","registerComponents","rawStyle","_litStyle","litHtml","firstRender","litRender","compatElementUpdated","LitStateless","Stateless","LitComponent","Component"],"mappings":"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","file":"Main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","define(\"EUIComponent\",[],(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.r(t);const o=e=>{e.shadowRoot.querySelectorAll(\"*\").forEach(t=>{t.classList.add(e.localName),t.classList.add(\"style-scope\")})},s=(e,t)=>{null==document.querySelector(`head > style[scope=${t}]`)&&ShadyCSS.prepareTemplate(e,t)};var c={whenComponentsAreDefined:e=>{try{const t=e.querySelectorAll(\":not(:defined)\"),r=Array.prototype.slice.call(t).map(e=>customElements.whenDefined(e.localName));return Promise.all(r)}catch(e){return new Promise(e=>{requestAnimationFrame(e)})}},sym:e=>{if(\"function\"==typeof Symbol)return Symbol(e?String(e):void 0);const t=\"xxxxxx\".split(\"\").replace(/./g,()=>(16*Math.random()|0).toString(16));return`${e?String(e):\"\"}-${t}`},microtaskDebounce:e=>{let t=!1;const r=document.createElement(\"i\");new MutationObserver(()=>{e(),t=!1}).observe(r,{childList:!0});let n=0;return()=>{t||(t=!0,r.textContent=`${n}`,n+=1)}},warn:e=>{console.warn(e)},addClassNames:o,prepareTemplate:s,bubble:(e,t,r={},o={})=>{const s=new CustomEvent(t,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(r,!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({bubbles:!0,composed:!0},o,{detail:r}));return e.dispatchEvent(s),s},dashToCamel:e=>e.replace(/\\-./g,e=>e.substr(1).toUpperCase()),camelToDash:e=>e.replace(/[A-Z]/g,e=>`-${e.toLowerCase()}`),compatUpdated:(e,t)=>{if(window.ShadyCSS){if(!e){const e=document.createElement(\"template\");e.innerHTML=t.shadowRoot.innerHTML,s(e,t.localName),ShadyCSS.styleElement(t),t._shadyPrepared=!0}ShadyCSS.nativeShadow||(t.shadowRoot.querySelectorAll(\"style\").forEach(e=>{e.textContent=\"\"}),o(t))}},eventHandlers:(e,t=!0)=>{if(e){if(t)return void Object.entries(e).forEach(([e,t])=>{(void 0).addEventListener(e,t)});Object.entries(e).forEach(([e,t])=>{(void 0).removeEventListener(e,t)})}}};function l(e={}){return function(t,r,n){delete n.writable,n.get=function(){},delete n.initializer,t.constructor._propDefs=Object.assign({},t.constructor._propDefs,{[r]:e})}}const a=(e,t)=>{const r=e?Array.from(e):[];return r.includes(t)||r.push(t),r},u=(e,t)=>void 0!==e._mixins&&e._mixins.indexOf(t)>-1;var d=e=>{const t=\"StatelessComponentMixin\",{eventHandlers:r,compatUpdated:n,bubble:i,microtaskDebounce:o}=c;return u(e,t)?(console.warn(`Tried to add existing mixin ${t}`),e):class extends e{static get _mixins(){return a(super._mixins,t)}constructor(){super(),this._shadyPrepared=!1,this._lifecycleDebounced=o(this._executeLifecycle.bind(this))}connectedCallback(){this._executeLifecycle(),r(this.intercepts)}disconnectedCallback(){r(this.intercepts,!1)}compatElementUpdated(){n(this._shadyPrepared,this)}bubble(e,t={},r={}){return i(this,e,t,r)}_executeLifecycle(){this.executeComponentRender()}executeComponentRender(){}}};const p=e=>{try{return JSON.parse(e)}catch(t){return\"SyntaxError\"===t.name&&console.warn(`Invalid JSON: '${e}'`),null}},h=e=>{switch(e){case String:case\"string\":return{coerce:e=>null==e?null:String(e),serialize:e=>null==e?null:String(e),deserialize:e=>e};case Boolean:case\"boolean\":return{coerce:e=>Boolean(e),serialize:e=>e?\"\":null,deserialize:e=>null!=e};case Number:case\"number\":return{coerce:e=>null==e||isNaN(e)?null:Number(e),serialize:e=>null==e?null:String(e),deserialize:e=>null==e?null:Number(e)};case Object:case\"object\":return{coerce:e=>null==e||\"object\"!=typeof e?null:e,serialize:e=>null==e?null:JSON.stringify(e),deserialize:e=>null==e?null:p(e)};case Array:case\"array\":return{coerce:e=>Array.isArray(e)?e:null,serialize:e=>null==e?null:JSON.stringify(e),deserialize:e=>null==e?null:p(e)};default:return{coerce:e=>e,serialize:e=>e,deserialize:e=>e}}};function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var b=e=>{return u(e,\"StatefulComponent\")?(console.warn(\"Tried to add existing mixin StatefulComponent\"),e):class extends e{static get _mixins(){return a(super._mixins,\"StatefulComponent\")}static registerComponents(e){e?Array.isArray(e)?e.forEach(e=>{const{is:t}=e;let{componentClass:r}=e;\"object\"!=typeof e||t&&r?(r||(r=e),customElements.get(t)?console.warn(`customElement ${t} has already been defined`):customElements.define(t,r)):console.warn(\"Object:component not defined properly\")}):console.warn(\"incorrect type provided\"):console.warn(\"No component provided to register\")}static register(e){e&&(this.is=e),customElements.get(this.is)?console.warn(`customElement ${this.is} has already been defined`):customElements.define(this.is,this)}constructor(){super(),this._shadyPrepared=!1,this._prevProps=void 0,this._connected=!1,this._justConnected=!1,this._lifecycleDebounced=c.microtaskDebounce(this._executeLifecycle.bind(this)),this.constructor._propDefs&&this._findProps()}connectedCallback(){c.eventHandlers(this.intercepts),this._setAttributes(),this._connected=!0,this._justConnected=!0,this._lifecycleDebounced()}disconnectedCallback(){c.eventHandlers(this.intercepts,!1),this.didDisconnect(),this.componentWillDisconnect(),this._connected=!1}compatElementUpdated(){c.compatUpdated(this._shadyPrepared,this)}bubble(e,t={},r={}){return c.bubble(this,e,t,r)}get props(){return this.constructor._propDefs?Object.keys(this.constructor._propDefs).reduce((e,t)=>(e[t]=this[t],e),{}):{}}static get observedAttributes(){return void 0!==this._propDefs&&(this._observedAttributes=Object.entries(this._propDefs).filter(([e,t])=>!0===t.attribute).map(([e,t])=>c.camelToDash(e))),this._observedAttributes}_setAttributes(){this.constructor._propDefs&&Object.entries(this.constructor._propDefs).forEach(([e,t])=>{const r=t.default;if(void 0===this[e]&&void 0===this.attributes[c.camelToDash(e)]&&!t.required)switch(t.type){case Object:case\"object\":this[e]=void 0!==r?function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(r,!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},r):null;break;case Array:case\"array\":this[e]=void 0!==r?[...r]:null;break;default:this[e]=void 0!==r?r:null}})}_findProps(){Object.entries(this.constructor._propDefs).forEach(([e,t])=>{const r=c.sym(e),{coerce:n,serialize:i}=h(t.type),o=t.default,s=this[e];t.required&&void 0!==t.default&&c.warn(`[${this.constructor.is}] Required prop \"${e}\" should not also have a default set`),Object.defineProperty(this,e,{enumerable:!0,get(){return this[r]},set(s){let l=n(s);null==l&&(t.required&&c.warn(`[${this.constructor.is}] Required prop \"${e}\" should not be set to null/undefined`),void 0!==o&&(l=o)),this[r]=l,!0===t.attribute&&this._syncPropertyToAttribute(e,l,i),this._lifecycleDebounced()}}),null!=s&&(this[e]=s)})}componentDidConnect(){}componentDidReceiveProps(e){}shouldComponentRender(e){return null}componentWillRender(e){}executeComponentRender(){}componentDidUpgrade(){}componentDidRender(e){}componentWillDisconnect(){}didConnect(){}didChangeProps(e){}shouldRender(e,t={}){const r=[...e].some(([e,t])=>t!==this[e]),n=this.shouldComponentRender(t);return null===n?r:n}willRender(e){}executeRender(){}didUpgrade(){}didRender(e){}didDisconnect(){}get propDefinitions(){const e=new Map;return Object.keys(this.constructor._propDefs).filter(e=>!e.startsWith(\"_\")).forEach(t=>{e.set(t,this.constructor._propDefs[t])}),e}async _shouldRenderLocale(e){return!!e.has(\"locale\")&&(await this.constructor.updateLocale(this.locale),!0)}static _getWindow(e){return window[e]}static async updateLocale(e){if(!e)return;const{home:t}=this;if(!t)return;let r=`locale/${e}.json`;\"/\"!==t&&(r=`${t}/locale/${e}.json`);try{const e=this._getWindow(\"fetch\"),t=await e(r),n=await t.json();this.i18n=n}catch(e){console.warn(\"Component: Error loading locale: %o, error: %o\",r,e)}}triggerComponentUpdate(){this._lifecycleDebounced()}attributeChangedCallback(e,t,r){super.attributeChangedCallback&&super.attributeChangedCallback(e,t,r);const n=c.dashToCamel(e),i=this.constructor._propDefs[n],{deserialize:o}=h(i.type);i&&!0===i.attribute&&this._syncAttributeToProperty(n,r,o)}async _executeLifecycle(){if(!this._connected)return;const e=void 0===this._prevProps,t=e?{}:this._prevProps,r=this._setDiff(t,this.props);this._justConnected&&(this.constructor._propDefs&&Object.entries(this.constructor._propDefs).forEach(([e,t])=>{t.required&&null==this[e]&&c.warn(`[${this.constructor.is}] Required prop \"${e}\" was not set`)}),this.didConnect(),this.componentDidConnect(),this._justConnected=!1),this.didChangeProps(r),this.componentDidReceiveProps(t),this._prevProps=this.props,e&&await this.constructor.updateLocale(this.locale),(e||await this._shouldRenderLocale(r)||this.shouldRender(r,t))&&(this.willRender(r),this.componentWillRender(t),this.executeRender(),this.executeComponentRender(),this.didRender(r),this.componentDidRender(t))}_setDiff(e,t){const r=new Map;return Object.keys(e).forEach(n=>{e[n]!==t[n]&&r.set(n,e[n])}),r}_syncAttributeToProperty(e,t,r){if(e in this.constructor._propDefs){this._syncingAttributeToProperty=!0;const n=r(t);this[e]=n,this._syncingAttributeToProperty=!1}}_syncPropertyToAttribute(e,t,r){if(!this._syncingAttributeToProperty){this._syncingPropertyToAttribute=!0;const n=r(t),i=c.camelToDash(e);null==n?this.removeAttribute(i):this.setAttribute(i,n),this._syncingPropertyToAttribute=!1}}}};const y=void 0!==window.ShadyCSS,{whenComponentsAreDefined:v}=c;var g=e=>{return u(e,\"Template\")?(console.warn(\"Tried to add existing mixin Template\"),e):class extends e{static get _mixins(){return a(super._mixins,\"Template\")}constructor(){super(),this.attachShadow({mode:\"open\"}),this._template=function(e,t){if(void 0===e&&(e=\"\"),\"string\"==typeof e){const t=document.createElement(\"div\");t.innerHTML=`<template id=\"the-template\">${e}</template>`,e=t.querySelector(\"template#the-template\")}const r=e.content.cloneNode(e,!0);if(\"string\"==typeof t){const e=document.createElement(\"style\");e.appendChild(document.createTextNode(t)),r.prepend(e)}return r}(this.constructor.template,this.constructor.style),this.root.appendChild(this._template)}connectedCallback(){if(super.connectedCallback&&super.connectedCallback(),!this._initialized){if(y&&ShadyCSS.styleElement(this),this._initialized=!0,this.init)return void v(this.root).then(()=>{this.init(),this.didUpgrade(),this.componentDidUpgrade()});v(this.root).then(()=>{this.didUpgrade(),this.componentDidUpgrade()})}}get root(){return this.shadowRoot}static getTemplate(e){const t=e?`#${e}`:\"template\",r=document.currentScript.ownerDocument.querySelector(t)||document._currentScript.ownerDocument.querySelector(t);return y&&e&&ShadyCSS.prepareTemplate(r,e),r}trigger(e,t){this.dispatchEvent(new CustomEvent(e,{detail:t||{}}))}find(e,t){return t?this.root.querySelectorAll(e):this.root.getElementById(e)}}};function _(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function O(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const w=1,S=2;const P=(e,t={style:null,template:null,templatePosition:null,props:null})=>r=>{r.is=e,r.i18n={},function(e,t){const{home:r}=t;if(e.home=r,!r)return;const n=new CustomEvent(\"GET_CONFIG\",{detail:{configKeysPath:{$components:\"component/componentsPath\"},callback:t=>{e.home=t.$components+r}}});document.dispatchEvent(n)}(r,t),r._propDefs=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?_(r,!0).forEach((function(t){O(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):_(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},r._propDefs,{},t.props),r._propDefs.locale={attribute:!1,type:\"string\",default:\"\"},function(e,t=null,r=null){t&&!r?e.style=t.toString():t&&r?e.style=`${t.toString()}${r.toString()}`:!t&&r&&(e.style=r.toString())}(r,r.style,t.style),function(e,t=null,r=null,n=w){t||r?t&&r?n===S?e.template=`${r}${t}`:n===w&&(e.template=`${t}${r}`):!t&&r&&(e.template=r):e.template=t}(r,r.template,t.template,t.templatePosition)};const j=e=>{var t,r,n;return u(e,\"StoreMixin\")?(console.warn(\"Tried to add existing mixin StoreMixin\"),e):(t=l({attribute:!1,type:\"object\",default:{}}),n=function(e,t,r,n,i){var o={};return Object.keys(n).forEach((function(e){o[e]=n[e]})),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,(\"value\"in o||o.initializer)&&(o.writable=!0),o=r.slice().reverse().reduce((function(r,n){return n(e,t,r)||r}),o),i&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(i):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(e,t,o),o=null),o}((r=class extends e{static get _mixins(){return a(super._mixins,\"StoreMixin\")}constructor(e){var t,r,i,o;super(e),t=this,r=\"state\",o=this,(i=n)&&Object.defineProperty(t,r,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(o):void 0}),this._stateChanged=this._stateChanged.bind(this)}getState(e){return void 0!==this.provider&&void 0!==this.provider.store?this.provider.store.getState(e):null}dispatch(e,t){void 0!==this.provider&&void 0!==this.provider.store&&this.provider.store.dispatch(e,t)}storeDisconnect(e){return void 0!==this.provider&&void 0!==this.provider.store?this.provider.store.disconnect(this,e):null}storeConnect(e){return void 0!==this.provider&&void 0!==this.provider.store?this.provider.store.connect(this,e):null}addActions(e,t){void 0!==this.provider&&void 0!==this.provider.store&&(\"string\"==typeof e?this.provider.store.listen(e,t):e.forEach(e=>{this.provider.store.listen(e.name,e.action)}))}removeActions(e,t){void 0!==this.provider&&void 0!==this.provider.store&&(\"string\"==typeof e?this.provider.store.unlisten(e,t):e.forEach(e=>{this.provider.store.unlisten(e.name,e.action)}))}_stateChanged(e){const t=Object.assign({},this.state);Object.keys(t).forEach(r=>{void 0!==e[r]&&(t[r]=e[r])}),this.state=t}}).prototype,\"state\",[t],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r)};r.d(t,\"Stateless\",(function(){return D})),r.d(t,\"Component\",(function(){return C})),r.d(t,\"TemplateComponent\",(function(){return x})),r.d(t,\"prop\",(function(){return l})),r.d(t,\"registerMixin\",(function(){return a})),r.d(t,\"hasMixin\",(function(){return u})),r.d(t,\"definition\",(function(){return P})),r.d(t,\"APPEND\",(function(){return w})),r.d(t,\"PREPEND\",(function(){return S})),r.d(t,\"Store\",(function(){return j}));class D extends(d(HTMLElement)){}class C extends(b(HTMLElement)){}class x extends(g(b(HTMLElement))){}}])}));\n//# sourceMappingURL=Main.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createMarker, directive, NodePart } from '../lit-html.js';\n/**\n * A directive that renders the items of an async iterable[1], appending new\n * values after previous values, similar to the built-in support for iterables.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is appended to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://github.com/tc39/proposal-async-iteration\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncAppend = directive((value, mapper) => async (part) => {\n    var e_1, _a;\n    if (!(part instanceof NodePart)) {\n        throw new Error('asyncAppend can only be used in text bindings');\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === part.value) {\n        return;\n    }\n    part.value = value;\n    // We keep track of item Parts across iterations, so that we can\n    // share marker nodes between consecutive Parts.\n    let itemPart;\n    let i = 0;\n    try {\n        for (var value_1 = __asyncValues(value), value_1_1; value_1_1 = await value_1.next(), !value_1_1.done;) {\n            let v = value_1_1.value;\n            // Check to make sure that value is the still the current value of\n            // the part, and if not bail because a new value owns this part\n            if (part.value !== value) {\n                break;\n            }\n            // When we get the first value, clear the part. This lets the\n            // previous value display until we can replace it.\n            if (i === 0) {\n                part.clear();\n            }\n            // As a convenience, because functional-programming-style\n            // transforms of iterables and async iterables requires a library,\n            // we accept a mapper function. This is especially convenient for\n            // rendering a template for each item.\n            if (mapper !== undefined) {\n                // This is safe because T must otherwise be treated as unknown by\n                // the rest of the system.\n                v = mapper(v, i);\n            }\n            // Like with sync iterables, each item induces a Part, so we need\n            // to keep track of start and end nodes for the Part.\n            // Note: Because these Parts are not updatable like with a sync\n            // iterable (if we render a new value, we always clear), it may\n            // be possible to optimize away the Parts and just re-use the\n            // Part.setValue() logic.\n            let itemStartNode = part.startNode;\n            // Check to see if we have a previous item and Part\n            if (itemPart !== undefined) {\n                // Create a new node to separate the previous and next Parts\n                itemStartNode = createMarker();\n                // itemPart is currently the Part for the previous item. Set\n                // it's endNode to the node we'll use for the next Part's\n                // startNode.\n                itemPart.endNode = itemStartNode;\n                part.endNode.parentNode.insertBefore(itemStartNode, part.endNode);\n            }\n            itemPart = new NodePart(part.options);\n            itemPart.insertAfterNode(itemStartNode);\n            itemPart.setValue(v);\n            itemPart.commit();\n            i++;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (value_1_1 && !value_1_1.done && (_a = value_1.return)) await _a.call(value_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n});\n//# sourceMappingURL=async-append.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { directive, NodePart } from '../lit-html.js';\n/**\n * A directive that renders the items of an async iterable[1], replacing\n * previous values with new values, so that only one value is ever rendered\n * at a time.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is rendered to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://github.com/tc39/proposal-async-iteration\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncReplace = directive((value, mapper) => async (part) => {\n    var e_1, _a;\n    if (!(part instanceof NodePart)) {\n        throw new Error('asyncReplace can only be used in text bindings');\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === part.value) {\n        return;\n    }\n    // We nest a new part to keep track of previous item values separately\n    // of the iterable as a value itself.\n    const itemPart = new NodePart(part.options);\n    part.value = value;\n    let i = 0;\n    try {\n        for (var value_1 = __asyncValues(value), value_1_1; value_1_1 = await value_1.next(), !value_1_1.done;) {\n            let v = value_1_1.value;\n            // Check to make sure that value is the still the current value of\n            // the part, and if not bail because a new value owns this part\n            if (part.value !== value) {\n                break;\n            }\n            // When we get the first value, clear the part. This let's the\n            // previous value display until we can replace it.\n            if (i === 0) {\n                part.clear();\n                itemPart.appendIntoPart(part);\n            }\n            // As a convenience, because functional-programming-style\n            // transforms of iterables and async iterables requires a library,\n            // we accept a mapper function. This is especially convenient for\n            // rendering a template for each item.\n            if (mapper !== undefined) {\n                // This is safe because T must otherwise be treated as unknown by\n                // the rest of the system.\n                v = mapper(v, i);\n            }\n            itemPart.setValue(v);\n            itemPart.commit();\n            i++;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (value_1_1 && !value_1_1.done && (_a = value_1.return)) await _a.call(value_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n});\n//# sourceMappingURL=async-replace.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateInstance } from '../lib/template-instance.js';\nimport { directive, NodePart, reparentNodes, TemplateResult } from '../lit-html.js';\nconst templateCaches = new WeakMap();\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('cache can only be used in text bindings');\n    }\n    let templateCache = templateCaches.get(part);\n    if (templateCache === undefined) {\n        templateCache = new WeakMap();\n        templateCaches.set(part, templateCache);\n    }\n    const previousValue = part.value;\n    // First, can we update the current TemplateInstance, or do we need to move\n    // the current nodes into the cache?\n    if (previousValue instanceof TemplateInstance) {\n        if (value instanceof TemplateResult &&\n            previousValue.template === part.options.templateFactory(value)) {\n            // Same Template, just trigger an update of the TemplateInstance\n            part.setValue(value);\n            return;\n        }\n        else {\n            // Not the same Template, move the nodes from the DOM into the cache.\n            let cachedTemplate = templateCache.get(previousValue.template);\n            if (cachedTemplate === undefined) {\n                cachedTemplate = {\n                    instance: previousValue,\n                    nodes: document.createDocumentFragment(),\n                };\n                templateCache.set(previousValue.template, cachedTemplate);\n            }\n            reparentNodes(cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n        }\n    }\n    // Next, can we reuse nodes from the cache?\n    if (value instanceof TemplateResult) {\n        const template = part.options.templateFactory(value);\n        const cachedTemplate = templateCache.get(template);\n        if (cachedTemplate !== undefined) {\n            // Move nodes out of cache\n            part.setValue(cachedTemplate.nodes);\n            part.commit();\n            // Set the Part value to the TemplateInstance so it'll update it.\n            part.value = cachedTemplate.instance;\n        }\n    }\n    part.setValue(value);\n});\n//# sourceMappingURL=cache.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    // handle static classes\n    if (!classMapCache.has(part)) {\n        element.className = committer.strings.join(' ');\n    }\n    const { classList } = element;\n    // remove old classes that no longer apply\n    const oldInfo = classMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n        }\n    }\n    // add new classes\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (!oldInfo || value !== oldInfo[name]) {\n            // We explicitly want a loose truthy check here because\n            // it seems more convenient that '' and 0 are skipped.\n            const method = value ? 'add' : 'remove';\n            classList[method](name);\n        }\n    }\n    classMapCache.set(part, classInfo);\n});\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    // Handle static styles the first time we see a Part\n    if (!styleMapCache.has(part)) {\n        style.cssText = committer.strings.join(' ');\n    }\n    // Remove old properties that no longer exist in styleInfo\n    const oldInfo = styleMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in styleInfo)) {\n            if (name.indexOf('-') === -1) {\n                // tslint:disable-next-line:no-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    }\n    // Add or update properties\n    for (const name in styleInfo) {\n        if (name.indexOf('-') === -1) {\n            // tslint:disable-next-line:no-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n    styleMapCache.set(part, styleInfo);\n});\n//# sourceMappingURL=style-map.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive } from '../lit-html.js';\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nexport const until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processsing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n//# sourceMappingURL=until.js.map","import { AttributePart, directive } from 'lit-html';\n\n/**\n * For AttributeParts, sets the attribute if the attribute is not null or\n * undefined, otherwise the attribute is removed.\n *\n * @function isNull\n * @property { unknown } value - value to set.\n */\nexport const ifNull = directive(value => (part) => {\n  if (value == null && part instanceof AttributePart) {\n    if (value !== part.value) {\n      const { name } = part.committer;\n      part.committer.element.removeAttribute(name);\n    }\n  } else {\n    part.setValue(value);\n  }\n});\n","import { Stateless, Component } from '@eui/component';\nimport { render as litRender, html as litHtml, svg } from 'lit-html';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\n\n// Allow users to add the renderer mixin on top of a custom base\n/* eslint arrow-body-style:0 */\nexport const LitMixin = (Base) => {\n  return class LitComponent extends Base {\n    static register(customName) {\n      if (super.register) {\n        super.register(customName);\n      } else {\n        console.error('register function not defined');\n      }\n    }\n\n    static registerComponents(components) {\n      if (super.registerComponents) {\n        super.registerComponents(components);\n      } else {\n        console.error('registerComponents function not defined');\n      }\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.style) {\n        // adding unsafeHTML back due to issue observed in IE Edge.\n        const rawStyle = `<style>${this.constructor.style}</style>`;\n        this._litStyle = litHtml`${unsafeHTML(rawStyle)}`;\n      }\n    }\n\n    /**\n     * @protected\n     * @function executeComponentRender\n     * @description Executes a render on the component using the lit renderer\n     */\n    executeRender() {\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.firstRender = true;\n      }\n      if (!this.render) {\n        throw new Error('render callback not found');\n      }\n      let result = this.render();\n      if (this._litStyle) {\n        result = litHtml`\n        ${this._litStyle}\n        ${result}\n        `;\n      }\n\n      // Render into the DOM\n      litRender(result, this.shadowRoot);\n      // ShadyCSS updates\n      if (this.compatElementUpdated) {\n        this.compatElementUpdated();\n      }\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.didUpgrade();\n        this.componentDidUpgrade();\n      }\n    }\n  };\n};\n\n// Export a default stack of renderer + standard mixins\nclass LitStateless extends LitMixin(Stateless) {}\nclass LitComponent extends LitMixin(Component) {}\n\nexport {\n  LitStateless,\n  LitComponent,\n  // Re-export the parts of lit-html users might also want to use\n  litHtml as html,\n  litRender as render,\n  svg\n};\n\n// export lit-html directives\nexport { asyncAppend } from 'lit-html/directives/async-append';\nexport { asyncReplace } from 'lit-html/directives/async-replace';\nexport { cache } from 'lit-html/directives/cache';\nexport { classMap } from 'lit-html/directives/class-map';\nexport { ifDefined } from 'lit-html/directives/if-defined';\nexport { guard } from 'lit-html/directives/guard';\nexport { repeat } from 'lit-html/directives/repeat';\nexport { styleMap } from 'lit-html/directives/style-map';\nexport { until } from 'lit-html/directives/until';\nexport { nothing } from 'lit-html';\n\nexport { ifNull } from './directives/IfNull';\n\nexport { definition } from '@eui/component';\n"],"sourceRoot":""}