export declare class Pagination {
  private dom: {
    paginationGroup: HTMLElement;
  };
  private event: {
    paginationChangePage: CustomEvent;
  };
  private listeners: {
    setNumEntries(event: Event): void;
  };
  private state: {
    currentPage: string | number;
    hasNextPage: boolean;
    hasPreviousPage: boolean;
    numEntries: string | number;
    numPages: string | number;
    pageClicked: string | number;
  };

  constructor(element: HTMLElement);

  private addEventListeners(): void;

  private removeEventListeners(): void;

  private updatePaginationDOM(): void;

  private updateCurrentPage(): void;

  private setNumPages(pages: number): void;

  private getNumEntries(event: Event): number;

  private injectPaginationControls(): void;

  private setPaginationControls(): void;

  private genArrowControl(direction: string, state: boolean): HTMLElement;

  private genPageControl(label: string, state: boolean): HTMLElement;

  private setArrowControl(element: HTMLElement, label: string, state: boolean): void;

  private setPageControl(element: HTMLElement, label: string, state: boolean): void;

  private isCurrentPage(pageNum: number): boolean;

  init(nPages: number): void;

  destroy(): void;
}
