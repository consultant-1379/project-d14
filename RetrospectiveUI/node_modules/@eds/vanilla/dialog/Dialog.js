export class Dialog {

  constructor(element) {
    this.dom = {
      dialog: element,
      content: element.querySelector('.content'),
      id: element.id,
      closeButton: undefined
    };
    this.type = element.dataset.type;
    this.trigger = element.dataset.trigger;
    this.events = {
      closeDialogEvent: new CustomEvent('DialogClose', {
        detail: { id: this.dom.id }
      }),
      showDialogEvent: new CustomEvent('DialogShow', {
        detail: { id: this.dom.id }
      })
    };
  }

  init() {
    this.getCloseButton();
    this.addEventListeners();
  }

  destroy() {
    this.removeEventListeners();
  }

  removeEventListeners() {
    if (this.trigger) {
      const button = document.querySelector(this.trigger);
      button.removeEventListener('click', () => this.show(), false);
    } else {
      this.dom.dialog.removeEventListener('triggerDialog', () => {});
    }

    switch (this.type) {
      case 'simple':
        this.dom.closeButton.removeEventListener('click', () => this.hide(), false);
        break;
      case 'fullscreen':
        this.dom.closeButton.removeEventListener('click', () => this.hide(), false);
        break;
    }
  }

  addEventListeners() {
    if (this.trigger) {
      const button = document.querySelector(this.trigger);
      button.addEventListener('click', () => this.show(), false);
    } else {
      this.dom.dialog.addEventListener('triggerDialog', e => {
        if (e.detail.id === this.dom.id) this.show();
      }, false);
    }

    switch (this.type) {
      case 'simple':
        this.dom.closeButton.addEventListener('click', () => this.hide(), false);
        break;
      case 'fullscreen':
        this.dom.closeButton.addEventListener('click', () => this.hide(), false);
        break;
    }
  }

  show() {
    this.dom.dialog.classList.add('show');
    this.dom.dialog.dispatchEvent(this.events.showDialogEvent);
  }

  hide() {
    this.dom.dialog.classList.remove('show');
    this.dom.dialog.dispatchEvent(this.events.closeDialogEvent);
  }

  /*
   * clickedOutside() {
   *   if (event.target.classList.contains('dialog')) this.hide();
   * }
   */

  getCloseButton() {
    const buttons = this.dom.dialog.querySelectorAll('.btn');
    Array.from(buttons).forEach(button => {
      if (button.getAttribute('data-close')) {
        this.dom.closeButton = button;
      }
    });
    // TODO: should there be an if state here?
    const icons = this.dom.dialog.querySelectorAll('.icon');
    Array.from(icons).forEach(icon => {
      if (icon.getAttribute('data-close')) {
        this.dom.closeButton = icon;
      }
    });
  }
}
